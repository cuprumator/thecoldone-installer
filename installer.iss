; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "The Cold One"
#define MyAppVersion "1.0"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{4DCE17E6-729D-4165-A40B-4EE7D0A1B663}}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
CreateAppDir=yes
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequired=lowest
OutputBaseFilename=TheColdOne
Compression=lzma
SolidCompression=yes
WizardStyle=modern
DefaultDirName="{userdocs}\My Games\HotlineMiami2\mods\TheColdOne"

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"

[Files]
Source: "./files/TheColdOne.patchwad"; DestDir: "{code:GetDataDir|Textures}"; Flags: ignoreversion
Source: "./files/hlm2_music_desktop.wad"; DestDir: "{code:GetDataDir|Music}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Code]
const
  gameid = 274170;
var
  DataDirPage: TInputDirWizardPage;

function GetSteamSetupDir() : string;
var
  steamPath: string;
  regpath: string;
begin
  if IsWin64 then
  begin
    regpath := 'SOFTWARE\Wow6432Node\Valve\Steam';
  end
  else
  begin
    regpath := 'SOFTWARE\Valve\Steam';
  end;
  if RegQueryStringValue(HKLM, regpath, 'InstallPath', steamPath) then
  Result := steamPath;
end;

function ReadACF(path: string): string;
var
  legth: integer;
  acfFile: TArrayOfString;
  gamepath: string;
  prefix: string;
begin
  prefix := '""installdir""""';
  if LoadStringsFromFile(path, acfFile) then
  begin      
    legth := GetArrayLength(acfFile);
    gamepath := acfFile[6];
    result := copy(gamepath, pos(gamepath,prefix) + length(prefix) + 1, length(gamepath) - length(prefix) - 1);
  end;
end;

function ReadVDF(path: string): TArrayOfString;
var
  vdfFile: TArrayOfString;
  resultPath: TArrayOfString;
  gamepath: string;
  i: integer;
  prefix: string;
begin
  if LoadStringsFromFile(path, vdfFile) then
  begin      
    SetArrayLength(resultPath, GetArrayLength(vdfFile) - 5);
    for i := 4 to GetArrayLength(vdfFile) - 2 do
    begin
      gamepath := vdfFile[i];
      prefix := '""' + IntToStr(i - 4) + '""""';
      resultPath[i - 4] := copy(gamepath, pos(gamepath,prefix) + length(prefix) + 1, length(gamepath) - length(prefix) - 1); 
    end;
    result := resultPath;
  end;
end;

function GetGamePath(): string;
var 
  steamPath: string;
  acfPath: string;
  vdfPath: string;
  paths: TArrayOfString;
  i: integer;
begin
  steamPath := GetSteamSetupDir();
  if DirExists(steamPath) then
  begin
    vdfPath := steamPath + '\steamapps\libraryfolders.vdf';
    paths:= ReadVDF(vdfPath);
    for i:=0 to GetArrayLength(paths) - 1 do
    begin
      acfPath := paths[i] + '\steamapps\appmanifest_268910.acf';
      if FileExists(acfPath) then
      begin
        result := paths[i] + '\steamapps\common\' + ReadACF(acfPath);
      end;
    end;
  end;
end;

procedure InitializeWizard;
var
  Index: Integer;
begin
  DataDirPage := CreateInputDirPage(wpSelectDir,
    'FoldersSettings', 'Customize folders settings ',
    'If the defaults are acceptable, then click Next.',
    False, 'New Folder');

  Index := DataDirPage.Add('Textures Folder');
  DataDirPage.Values[Index] := ExpandConstant('{userdocs}') + '\My Games\HotlineMiami2\mods';
  Index := DataDirPage.Add('Music Folder');
  DataDirPage.Values[Index] :=  GetGamePath();
end;

function GetDataDir(Param: String): String;
begin
  if Param = 'Textures' then
    Result := DataDirPage.Values[0]
  else if Param = 'Music' then
    Result := DataDirPage.Values[1];
end;